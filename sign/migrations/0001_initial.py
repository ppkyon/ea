# Generated by Django 4.2.5 on 2023-09-18 02:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sign.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("display_id", models.BigIntegerField()),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(0, "停止中"), (1, "仮登録"), (2, "アクティブ")], default=0
                    ),
                ),
                ("delete_flg", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user",
            },
            managers=[
                ("objects", sign.models.AuthUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ManagerProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("family_name", models.CharField(max_length=255, null=True)),
                ("first_name", models.CharField(max_length=255, null=True)),
                ("family_name_kana", models.CharField(max_length=255, null=True)),
                ("first_name_kana", models.CharField(max_length=255, null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "manager",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manager_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "manager_profile",
            },
        ),
    ]
